(simple board-color (176 55)
  (loop for n in '(82 83 84 85 86) do
       (send-feedback 144 n value))
  (dotimes (x 40) 
    (send-feedback 144 x value)))

(defvar *effects-bg* 7)
(defvar *effects-fg* 117)
(defvar *effects-highlight* 44)

(gen-variants ((0 0) (1 1) (2 2) (3 3))
  (defparameter *selected-effect-^* 'layer-trace-^))
(gen-variants ((0 0) (1 1) (2 2) (3 3))
  (defparameter *saved-clip-^* (list 0 0)))

(defparameter *selected-clip-x* 0)
(defparameter *selected-clip-y* 0)

(defun reset-layer-display ()
  (loop for x in '(148 149 150 151) do
       (send-feedback x 51 0)))
(defun reset-effect-display-0 ()
  (loop for x in '(20 28 36) do
       (send-feedback 144 x *effects-bg*)))
(defun reset-effect-display-1 ()
  (loop for x in '(21 29 37) do
       (send-feedback 144 x *effects-bg*)))
(defun reset-effect-display-2 ()
  (loop for x in '(22 30 38) do
       (send-feedback 144 x *effects-bg*)))
(defun reset-effect-display-3 ()
  (loop for x in '(23 31 39) do
       (send-feedback 144 x *effects-bg*)))

(defun string->cat-call (str &rest params)
  (loop for n in params do
       (setf str (concatenate 'string
			      (string-upcase str)
			      (write-to-string n))))
  (funcall (intern str)))

(defun select-new-clip (x y)
  (if (eql x -1)
      (if (eql *selected-clip-x* 0)
	  (return-from select-new-clip)))
  (if (eql y -1)
      (if (eql *selected-clip-y* 0)
	  (return-from select-new-clip)))
  (setf *selected-clip-x* (+ *selected-clip-x* x))
  (setf *selected-clip-y* (+ *selected-clip-y* y))
  (string->cat-call "clip-"
		    *selected-clip-x*
		     '-
		     *selected-clip-y*))

(defmacro gen-variants (variants &body body)
  `(progn
     ,@(loop for n in variants collect
	    (let ((i 0))
	      (read-from-string
	       (with-output-to-string (s)
		 (map 'nil
		      #'(lambda (x)
			  (if (char= x #\^)
			      (progn
				(format s "~a" (nth i n)) 
				(incf i))
			      (format s "~a" x)))
		      (write-to-string (first body)))))))))

;;generate activate-saved-clip-0 through activate-saved-clip-3
(gen-variants ((0 16 0 0) (1 17 1 1) (2 18 2 2) (3 19 3 3))
  (simple activate-saved-clip-^ (144 ^)
    (string->cat-call "select-clip-"
		      (first *saved-clip-^*)
		      '-
		      (second *saved-clip-^*))))

(simple actually-select-clip (144 7))
(simple clip-select-x-+ (144 2)
  (select-new-clip 1 0))
(simple clip-select-x-- (144 0)
  (select-new-clip -1 0))
(simple clip-select-y-+ (144 9)
  (select-new-clip 0 1))
(simple clip-select-y-- (144 1)
  (select-new-clip 0 -1))

(gen-variants ((trace 0 trace 0 36 trace 0 36)
	       (trace 1 trace 1 37 trace 1 37)
	       (trace 2 trace 2 38 trace 2 38)
	       (trace 3 trace 3 39 trace 3 39)
	       (shake 0 shake 0 28 shake 0 28)
	       (shake 1 shake 1 29 shake 1 29)
	       (shake 2 shake 2 30 shake 2 30)
	       (shake 3 shake 3 31 shake 3 31))
  (pass layer-^-^ (0 0)
    (if (< value 2)
	(progn
	  (layer-^-activate-^ 0)
	  (send-feedback 144 ^ *effects-fg*))
	(progn
	  (layer-^-activate-^ 127)
	  (send-feedback 144 ^ *effects-highlight*)))))

(rebind layer-effect0-set-0 (0 0)
  (176 52 layer-trace-0))
(rebind layer-effect0-set-1 (0 0)
  (176 53 layer-trace-1))
(rebind layer-effect0-set-2 (0 0)
  (176 54 layer-trace-2))
(rebind layer-effect0-set-3 (0 0)
  (176 55 layer-trace-3))

(rebind layer-effect1-set-0 (0 0)
  (176 52 layer-shake-0))
(rebind layer-effect1-set-1 (0 0)
  (176 53 layer-shake-1))
(rebind layer-effect1-set-2 (0 0)
  (176 54 layer-shake-2))
(rebind layer-effect1-set-3 (0 0)
  (176 55 layer-shake-3))

(simple create-effect-auto-0 (144 12)
  (auto auto-effect-0 (144 4) (0 127 1 *selected-effect-0*))
    (format t "Creating auto for: ~a~%" *selected-effect-0*))

(simple create-effect-auto-1 (144 13)
  (auto auto-effect-1 (144 5) (0 127 1 *selected-effect-1*))
    (format t "Creating auto for: ~a~%" *selected-effect-1*))

(simple create-effect-auto-2 (144 14)
  (auto auto-effect-2 (144 6) (0 127 1 *selected-effect-2*))
    (format t "Creating auto for: ~a~%" *selected-effect-2*))

(simple create-effect-auto-3 (144 15)
  (auto auto-effect-3 (144 7) (0 127 1 *selected-effect-3*))
    (format t "Creating auto for: ~a~%" *selected-effect-3*))


(simple layer-0-effect-0 (144 36)
	(layer-effect0-set-0)
	(setf *selected-effect-0* 'layer-trace-0)
	(reset-effect-display-0)
	(send-feedback 144 36 44))
(simple layer-1-effect-0 (144 37)
	(layer-effect0-set-1)
	(setf *selected-effect-1* 'layer-trace-1)
	(reset-effect-display-1)
	(send-feedback 144 37 44))
(simple layer-2-effect-0 (144 38)
	(layer-effect0-set-2)
	(setf *selected-effect-2* 'layer-trace-2)
	(reset-effect-display-2)
	(send-feedback 144 38 44))
(simple layer-3-effect-0 (144 39)
	(layer-effect0-set-3)
	(setf *selected-effect-3* 'layer-trace-3)
	(reset-effect-display-3)
	(send-feedback 144 39 44))
(simple layer-0-effect-1 (144 28)
	(layer-effect1-set-0)
	(setf *selected-effect-0* 'layer-shake-0)
	(reset-effect-display-0)
	(send-feedback 144 28 44))
(simple layer-1-effect-1 (144 29)
	(layer-effect1-set-1)
	(setf *selected-effect-1* 'layer-shake-1)
	(reset-effect-display-1)
	(send-feedback 144 29 44))
(simple layer-2-effect-1 (144 30)
	(layer-effect1-set-2)
	(setf *selected-effect-2* 'layer-shake-2)
	(reset-effect-display-2)
	(send-feedback 144 30 44))
(simple layer-3-effect-1 (144 31)
	(layer-effect1-set-3)
	(setf *selected-effect-3* 'layer-shake-3)
	(reset-effect-display-3)
	(send-feedback 144 31 44))

(pass layer-select-0 (148 51)
      (setf *current-layer* 0)
      (reset-layer-display)
      (send-feedback 148 51 127))
(pass layer-select-1 (149 51)
      (setf *current-layer* 1)
      (reset-layer-display)
      (send-feedback 149 51 127))
(pass layer-select-2 (150 51)
      (setf *current-layer* 2)
      (reset-layer-display)
      (send-feedback 150 51 127))
(pass layer-select-3 (151 51)
      (setf *current-layer* 3)
      (reset-layer-display)
      (send-feedback 151 51 127))
(pass layer-opacity-0 (180 7)
      (if (< value 10)
	  (send-feedback 144 4 0)
	  (send-feedback 144 4 23)))
(pass layer-opacity-1 (181 7)
      (if (< value 10)
	  (send-feedback 144 5 0)
	  (send-feedback 144 5 23)))
(pass layer-opacity-2 (182 7)
      (if (< value 10)
	  (send-feedback 144 6 0)
	  (send-feedback 144 6 23)))
(pass layer-opacity-3 (183 7)
      (if (< value 10)
	  (send-feedback 144 7 0)
	  (send-feedback 144 7 23)))
