(simple board-color (176 55)
  (loop for n in '(82 83 84 85 86) do
       (send-feedback 144 n value))
  (dotimes (x 40) 
    (send-feedback 144 x value)))

(defvar *effects-bg* 7)
(defvar *effects-fg* 117)
(defvar *effects-highlight* 44)

(defparameter *selected-effect-0* 'layer-trace-0)
(defparameter *selected-effect-1* 'layer-trace-1)
(defparameter *selected-effect-2* 'layer-trace-2)
(defparameter *selected-effect-3* 'layer-trace-3)

(defun reset-layer-display ()
  (loop for x in '(148 149 150 151) do
       (send-feedback x 51 0)))
(defun reset-effect-display-0 ()
  (loop for x in '(20 28 36) do
       (send-feedback 144 x *effects-bg*)))
(defun reset-effect-display-1 ()
  (loop for x in '(21 29 37) do
       (send-feedback 144 x *effects-bg*)))
(defun reset-effect-display-2 ()
  (loop for x in '(22 30 38) do
       (send-feedback 144 x *effects-bg*)))
(defun reset-effect-display-3 ()
  (loop for x in '(23 31 39) do
       (send-feedback 144 x *effects-bg*)))
(format t "============================")

(pass layer-trace-0 (0 0)
  (if (< value 2)
      (progn
	(layer-trace-activate-0 0)
	(send-feedback 144 36 *effects-fg*))
      (progn
	(layer-trace-activate-0 127)
	(send-feedback 144 36 *effects-highlight*))))
(pass layer-trace-1 (0 0)
  (if (< value 2)
      (progn
	(layer-trace-activate-1 0)
	(send-feedback 144 37 *effects-fg*))
      (progn
	(layer-trace-activate-1 127)
	(send-feedback 144 37 *effects-highlight*))))
(pass layer-trace-2 (0 0)
  (if (< value 2)
      (progn
	(layer-trace-activate-2 0)
	(send-feedback 144 38 *effects-fg*))
      (progn
	(layer-trace-activate-2 127)
	(send-feedback 144 38 *effects-highlight*))))
(pass layer-trace-3 (0 0)
  (if (< value 2)
      (progn
	(layer-trace-activate-3 0)
	(send-feedback 144 39 *effects-fg*))
      (progn
	(layer-trace-activate-3 127)
	(send-feedback 144 39 *effects-highlight*))))
(pass layer-shake-0 (0 0)
  (if (< value 2)
      (progn
	(layer-shake-activate-0 0)
	(send-feedback 144 28 *effects-fg*))
      (progn
	(layer-shake-activate-0 127)
	(send-feedback 144 28 *effects-highlight*))))
(pass layer-shake-1 (0 0)
  (if (< value 2)
      (progn
	(layer-shake-activate-1 0)
	(send-feedback 144 29 *effects-fg*))
      (progn
	(layer-shake-activate-1 127)
	(send-feedback 144 29 *effects-highlight*))))
(pass layer-shake-2 (0 0)
  (if (< value 2)
      (progn
	(layer-shake-activate-2 0)
	(send-feedback 144 30 *effects-fg*))
      (progn
	(layer-shake-activate-2 127)
	(send-feedback 144 30 *effects-highlight*))))
(pass layer-shake-3 (0 0)
  (if (< value 2)
      (progn
	(layer-shake-activate-3 0)
	(send-feedback 144 31 *effects-fg*))
      (progn
	(layer-shake-activate-3 127)
	(send-feedback 144 31 *effects-highlight*))))

(rebind layer-effect0-set-0 (0 0)
  (176 52 layer-trace-0))
(rebind layer-effect0-set-1 (0 0)
  (176 53 layer-trace-1))
(rebind layer-effect0-set-2 (0 0)
  (176 54 layer-trace-2))
(rebind layer-effect0-set-3 (0 0)
  (176 55 layer-trace-3))

(rebind layer-effect1-set-0 (0 0)
  (176 52 layer-shake-0))
(rebind layer-effect1-set-1 (0 0)
  (176 53 layer-shake-1))
(rebind layer-effect1-set-2 (0 0)
  (176 54 layer-shake-2))
(rebind layer-effect1-set-3 (0 0)
  (176 55 layer-shake-3))

(simple create-effect-auto-0 (144 12)
  (auto auto-effect-0 (144 4) (0 127 1 *selected-effect-0*))
    (format t "Creating auto for: ~a~%" *selected-effect-0*))

(simple create-effect-auto-1 (144 13)
  (auto auto-effect-1 (144 5) (0 127 1 *selected-effect-1*))
    (format t "Creating auto for: ~a~%" *selected-effect-1*))

(simple create-effect-auto-2 (144 14)
  (auto auto-effect-2 (144 6) (0 127 1 *selected-effect-2*))
    (format t "Creating auto for: ~a~%" *selected-effect-2*))

(simple create-effect-auto-3 (144 15)
  (auto auto-effect-3 (144 7) (0 127 1 *selected-effect-3*))
    (format t "Creating auto for: ~a~%" *selected-effect-3*))


(simple layer-0-effect-0 (144 36)
	(layer-effect0-set-0)
	(setf *selected-effect-0* 'layer-trace-0)
	(reset-effect-display-0)
	(send-feedback 144 36 44))
(simple layer-1-effect-0 (144 37)
	(layer-effect0-set-1)
	(setf *selected-effect-1* 'layer-trace-1)
	(reset-effect-display-1)
	(send-feedback 144 37 44))
(simple layer-2-effect-0 (144 38)
	(layer-effect0-set-2)
	(setf *selected-effect-2* 'layer-trace-2)
	(reset-effect-display-2)
	(send-feedback 144 38 44))
(simple layer-3-effect-0 (144 39)
	(layer-effect0-set-3)
	(setf *selected-effect-3* 'layer-trace-3)
	(reset-effect-display-3)
	(send-feedback 144 39 44))
(simple layer-0-effect-1 (144 28)
	(layer-effect1-set-0)
	(setf *selected-effect-0* 'layer-shake-0)
	(reset-effect-display-0)
	(send-feedback 144 28 44))
(simple layer-1-effect-1 (144 29)
	(layer-effect1-set-1)
	(setf *selected-effect-1* 'layer-shake-1)
	(reset-effect-display-1)
	(send-feedback 144 29 44))
(simple layer-2-effect-1 (144 30)
	(layer-effect1-set-2)
	(setf *selected-effect-2* 'layer-shake-2)
	(reset-effect-display-2)
	(send-feedback 144 30 44))
(simple layer-3-effect-1 (144 31)
	(layer-effect1-set-3)
	(setf *selected-effect-3* 'layer-shake-3)
	(reset-effect-display-3)
	(send-feedback 144 31 44))

(pass layer-select-0 (148 51)
      (setf *current-layer* 0)
      (reset-layer-display)
      (send-feedback 148 51 127))
(pass layer-select-1 (149 51)
      (setf *current-layer* 1)
      (reset-layer-display)
      (send-feedback 149 51 127))
(pass layer-select-2 (150 51)
      (setf *current-layer* 2)
      (reset-layer-display)
      (send-feedback 150 51 127))
(pass layer-select-3 (151 51)
      (setf *current-layer* 3)
      (reset-layer-display)
      (send-feedback 151 51 127))
(pass layer-opacity-0 (180 7)
      (if (< value 10)
	  (send-feedback 144 4 0)
	  (send-feedback 144 4 23)))
(pass layer-opacity-1 (181 7)
      (if (< value 10)
	  (send-feedback 144 5 0)
	  (send-feedback 144 5 23)))
(pass layer-opacity-2 (182 7)
      (if (< value 10)
	  (send-feedback 144 6 0)
	  (send-feedback 144 6 23)))
(pass layer-opacity-3 (183 7)
      (if (< value 10)
	  (send-feedback 144 7 0)
	  (send-feedback 144 7 23)))
;;(load "testoutput.lsp")
